[
    {
        "id": "cd6dfb6711b6f04d",
        "type": "tab",
        "label": "Flow 9",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ws_in",
        "type": "websocket in",
        "z": "cd6dfb6711b6f04d",
        "name": "ESP32 → NodeRED",
        "server": "2807c144db7693cc",
        "client": "",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "json_parse",
                "debug_from_esp"
            ]
        ]
    },
    {
        "id": "json_parse",
        "type": "json",
        "z": "cd6dfb6711b6f04d",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 540,
        "y": 100,
        "wires": [
            [
                "fn_update_ui"
            ]
        ]
    },
    {
        "id": "debug_from_esp",
        "type": "debug",
        "z": "cd6dfb6711b6f04d",
        "name": "Dari ESP32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 540,
        "y": 60,
        "wires": []
    },
    {
        "id": "fn_update_ui",
        "type": "function",
        "z": "cd6dfb6711b6f04d",
        "name": "Update UI",
        "func": "let out = [];\n\nout.push({ topic:\"gree_power\", payload: msg.payload.gree_power === \"on\" });\nout.push({ topic:\"gree_temp\", payload: msg.payload.gree_temp });\nout.push({ topic:\"haier_power\", payload: msg.payload.haier_power === \"on\" });\nout.push({ topic:\"haier_temp\", payload: msg.payload.haier_temp });\n\nreturn [out];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 100,
        "wires": [
            [
                "ui_switch_gree",
                "ui_num_gree",
                "ui_switch_haier",
                "ui_num_haier"
            ]
        ]
    },
    {
        "id": "ui_switch_gree",
        "type": "ui_switch",
        "z": "cd6dfb6711b6f04d",
        "name": "Gree Power",
        "label": "Gree Power",
        "tooltip": "",
        "group": "grp_ac",
        "order": 1,
        "width": "",
        "height": "",
        "passthru": true,
        "decouple": "false",
        "topic": "gree_power",
        "topicType": "str",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            [
                "fn_build_json"
            ]
        ]
    },
    {
        "id": "ui_num_gree",
        "type": "ui_numeric",
        "z": "cd6dfb6711b6f04d",
        "name": "Gree Temp",
        "label": "Gree Temp",
        "tooltip": "",
        "group": "grp_ac",
        "order": 2,
        "width": "",
        "height": "",
        "wrap": false,
        "passthru": true,
        "topic": "gree_temp",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": 16,
        "max": 30,
        "step": 1,
        "className": "",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "fn_build_json"
            ]
        ]
    },
    {
        "id": "ui_switch_haier",
        "type": "ui_switch",
        "z": "cd6dfb6711b6f04d",
        "name": "Haier Power",
        "label": "Haier Power",
        "tooltip": "",
        "group": "grp_ac",
        "order": 3,
        "width": "",
        "height": "",
        "passthru": true,
        "decouple": "false",
        "topic": "haier_power",
        "topicType": "str",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 360,
        "y": 320,
        "wires": [
            [
                "fn_build_json"
            ]
        ]
    },
    {
        "id": "ui_num_haier",
        "type": "ui_numeric",
        "z": "cd6dfb6711b6f04d",
        "name": "Haier Temp",
        "label": "Haier Temp",
        "tooltip": "",
        "group": "grp_ac",
        "order": 4,
        "width": "",
        "height": "",
        "wrap": false,
        "passthru": true,
        "topic": "haier_temp",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": 16,
        "max": 30,
        "step": 1,
        "className": "",
        "x": 360,
        "y": 380,
        "wires": [
            [
                "fn_build_json"
            ]
        ]
    },
    {
        "id": "fn_build_json",
        "type": "function",
        "z": "cd6dfb6711b6f04d",
        "name": "Build JSON",
        "func": "let data = {};\n\nif (msg.topic === \"gree_power\") {\n    data.gree_power = msg.payload;\n}\nelse if (msg.topic === \"gree_temp\") {\n    data.gree_temp = msg.payload;\n}\nelse if (msg.topic === \"haier_power\") {\n    data.haier_power = msg.payload;\n}\nelse if (msg.topic === \"haier_temp\") {\n    data.haier_temp = msg.payload;\n}\n\nreturn { payload: JSON.stringify(data) };",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 260,
        "wires": [
            [
                "debug_to_esp",
                "ws_out"
            ]
        ]
    },
    {
        "id": "debug_to_esp",
        "type": "debug",
        "z": "cd6dfb6711b6f04d",
        "name": "Kirim ke ESP32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "ws_out",
        "type": "websocket out",
        "z": "cd6dfb6711b6f04d",
        "name": "NodeRED → ESP32",
        "server": "2807c144db7693cc",
        "client": "",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "2807c144db7693cc",
        "type": "websocket-listener",
        "path": "ws://192.168.223.68:1880/ws",
        "wholemsg": "true"
    },
    {
        "id": "grp_ac",
        "type": "ui_group",
        "name": "Kontrol AC",
        "tab": "tab_ac",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "tab_ac",
        "type": "ui_tab",
        "name": "Dashboard AC",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e41c233a0400365f",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-dashboard": "3.6.6"
        }
    }
]